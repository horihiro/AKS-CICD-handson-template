on:
  workflow_dispatch:

permissions:
  id-token: write # for azure/login with OpenID Connect
  contents: read

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@main

      - name: Set image tag from workflow run-number
        id: setImageTag
        run: |
          echo "::set-output name=IMAGE_TAG::${{ github.run_number }}"

      - name: Replace tokens in src/MyHealth.Web/appsettings.json with env
        uses: cschleiden/replace-tokens@v1.1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: '["src/MyHealth.Web/appsettings.json"]'
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

      # dotnet build
      # https://docs.microsoft.com/ja-jp/dotnet/architecture/devops-for-aspnet-developers/actions-build
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 2.0.0
      - name: Restore .NET dependencies
        run: dotnet restore ./MHC_ASPNetCore.sln
      - name: Build .NET app
        run: dotnet publish ./MHC_ASPNetCore.sln -c Release -o ./obj/Docker/publish

      # docker build & push
      # https://docs.microsoft.com/ja-jp/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 

      - name: Build docker image, login to ACR and push image to ACR
        run: |
          # Build docker image
          docker build . -t ${{ secrets.ACR }}/myhealth.web:${{ steps.setImageTag.outputs.IMAGE_TAG }} -t ${{ secrets.ACR }}/myhealth.web:latest
          # Login to ACR
          # https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md#authenticating-to-a-registry-with-azure-cli
          az acr login -n ${{ secrets.ACR }}
          # Push image to ACR
          docker push -a ${{ secrets.ACR }}/myhealth.web
        working-directory: ./src/MyHealth.Web

    outputs:
      IMAGE_TAG: ${{ steps.setImageTag.outputs.IMAGE_TAG}}

  deploy-to-SQL:
    needs: build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@main

      # https://docs.microsoft.com/ja-jp/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      # https://docs.microsoft.com/ja-jp/azure/azure-sql/database/connect-github-actions-sql-db
      - name: Apply Dacpac to Azure SQL server
        uses: azure/sql-action@v1
        with:
          server-name: ${{ secrets.SQL_SERVER }}
          connection-string: "Server=tcp:${{ secrets.SQL_SERVER }},1433;Initial Catalog=${{ secrets.DatabaseName }};Persist Security Info=False;User ID=${{ secrets.SQL_USER }};Password=${{ secrets.SQL_PASSWORD }};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;"
          dacpac-package: './myhealthclinic.dacpac'

      - id: setImageTag
        run: |
          echo "::set-output name=IMAGE_TAG::${{ needs.build.outputs.IMAGE_TAG }}"

    outputs:
      IMAGE_TAG: ${{ steps.setImageTag.outputs.IMAGE_TAG}}

  deploy-to-AKS:
    needs: deploy-to-SQL
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@main

      - name: Replace tokens in mhc-aks.yaml with env
        uses: cschleiden/replace-tokens@v1.1
        with:
          tokenPrefix: '__'
          tokenSuffix: '__'
          files: '["mhc-aks.yaml"]'
        env:
          ACR: ${{ secrets.ACR }}

      # https://docs.microsoft.com/ja-jp/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # AKS
      - name: Prepeare k8s context
        uses: azure/aks-set-context@v2.0
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP_NAME }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}
      - name: Create Deployments & Services in AKS
        uses: azure/k8s-deploy@v1
        with:
          manifests: |
            ./mhc-aks.yaml
      - name: Update image in AKS
        run: | 
          kubectl set image deployments/mhc-front mhc-front=${{ secrets.ACR }}/myhealth.web:${{ needs.deploy-to-SQL.outputs.IMAGE_TAG}}
